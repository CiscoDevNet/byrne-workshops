@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 1 - Where to Get YANG models
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

cd DEVWKS-2585/code
open https://github.com/YangModels/yang

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 2 - Using pyang to View YANG Models
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

pyang -f tree ietf-interfaces.yang
pyang -f tree cisco-platform-software.yang

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 3 - YANG Augmentation and Deviation
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

pyang -f tree ietf-ip.yang
more cisco-xe-ietf-ip-deviation.yang

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 4 - YANG Data Models
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

python get_interfaces_yang.py

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 5 - Retrieving the RESTCONF Root
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

curl -k -u vagrant:vagrant \
  https://127.0.0.1:2225/.well-known/host-meta \
  -H 'Accept: application/yang-data+json' \
  -H 'Content-Type: application/yang-data+json' \

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 6 - Constructing RESTCONF URIs
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

curl -k -u vagrant:vagrant \
  https://127.0.0.1:2225/restconf/data/ietf-interfaces:interfaces/interface=GigabitEthernet2 \
  -H 'Accept: application/yang-data+json' \
  -H 'Content-Type: application/yang-data+json' \


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 7 - Content - XML or JSON
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

python get_interface_xml.py

python get_interface_json.py

diff get_interface_xml.py get_interface_json.py

more get_interface_xml.py
more get_interface_json.py


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 8 - Retrieving the Capability List
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Use the following values to fill in the Postman Client

URL - https://127.0.0.1:2225/restconf/data/ietf-yang-library:modules-state
Username - vagrant
Password - vagrant
Key 1 - Content-Type
Key 2 - Accept
Value - application/yang-data+json

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 9 - Retrieving Interface Configuration with Postman (GET)
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Use the following values to fill in the Postman Client

URL - https://127.0.0.1:2225/restconf/data/ietf-interfaces:interfaces/interface=GigabitEthernet2
Username - vagrant
Password - vagrant
Key 1 - Content-Type
Key 2 - Accept
Value - application/yang-data+json


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 10 - Modifying Configuration with Postman (PUT)
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Use the following values to fill in the Postman Client

URL - https://127.0.0.1:2225/restconf/data/ietf-interfaces:interfaces/interface=GigabitEthernet2
Username - vagrant
Password - vagrant
Key 1 - Content-Type
Key 2 - Accept
Value - application/yang-data+json
Body -
{
  "ietf-interfaces:interface": {
    "name": "GigabitEthernet2",
    "description": "**THIS IS NOT INTERFACE 2**",
    "type": "iana-if-type:ethernetCsmacd"
  }
}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 11 - Generating Python Code with Postman
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

touch make_python.py
nano make_python.py

Use the following values to fill in the Postman Client

URL - https://127.0.0.1:2225/restconf/data/ietf-interfaces:interfaces/interface=GigabitEthernet2
Username - vagrant
Password - vagrant
Key 1 - Content-Type
Key 2 - Accept
Value - application/yang-data+json

REPLACE the line that starts with 'response =' with:

response = requests.request("GET", url, data=payload, headers=headers, verify=False)

python make_python.py

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Task 12 - Lab Cleanup
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

cd ../..
make cleanup
